[{"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/index.js":"1","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/reportWebVitals.js":"2","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/App.js":"3","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/My_Navbar.js":"4","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/Sk_BarChart.js":"5","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/data_processing.js":"6","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/Sk_PieChart.js":"7","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/Sk_VoronoiDiagram.js":"8","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/index.js":"9","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/My_Navbar.js":"10","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/App.js":"11","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/reportWebVitals.js":"12","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/Sk_BarChart.js":"13","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/Sk_PieChart.js":"14","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/Sk_VoronoiDiagram.js":"15","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/data_processing.js":"16","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/Sk_CirclePlot.js":"17"},{"size":1639,"mtime":1611538557654,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1610612293135,"results":"20","hashOfConfig":"19"},{"size":1134,"mtime":1611538129388,"results":"21","hashOfConfig":"19"},{"size":922,"mtime":1611047410608,"results":"22","hashOfConfig":"19"},{"size":7389,"mtime":1611901226203,"results":"23","hashOfConfig":"19"},{"size":846,"mtime":1611349337312,"results":"24","hashOfConfig":"19"},{"size":4958,"mtime":1611901002804,"results":"25","hashOfConfig":"19"},{"size":4766,"mtime":1611907353182,"results":"26","hashOfConfig":"19"},{"size":2006,"mtime":1613117568775,"results":"27","hashOfConfig":"28"},{"size":922,"mtime":1611047410608,"results":"29","hashOfConfig":"28"},{"size":1134,"mtime":1612942544034,"results":"30","hashOfConfig":"28"},{"size":362,"mtime":1610612293135,"results":"31","hashOfConfig":"28"},{"size":7389,"mtime":1611901226203,"results":"32","hashOfConfig":"28"},{"size":4958,"mtime":1611901002804,"results":"33","hashOfConfig":"28"},{"size":11011,"mtime":1613117018453,"results":"34","hashOfConfig":"28"},{"size":846,"mtime":1611349337312,"results":"35","hashOfConfig":"28"},{"size":1893,"mtime":1613070031653,"results":"36","hashOfConfig":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"nwgv27",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xa1qid",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/index.js",["81","82","83"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport data from  './datasets/Film_Locations_in_San_Francisco.csv';\nimport App from './App';\nimport My_Navbar from './My_Navbar';\nimport reportWebVitals from './reportWebVitals';\nimport Sk_BarChart from './Sk_BarChart';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n      integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\n      crossorigin=\"anonymous\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"./index.css\"\n    />\n      <My_Navbar/>\n      <div className=\"sk_container\">\n        <div className=\"sk_row\">\n          <div className=\"sk_col\">\n            <h2>Context view: Directors and their appearances</h2>\n            <App kind=\"VoronoiDiagram\"/> \n          </div>\n          <div className=\"sk_col\">\n            <div className=\"sk_row\">\n              <h2>Focus view: Top X most popular directors in all film locations</h2>\n              <App kind=\"PieChart\"/>\n            </div>\n            <div className=\"sk_row\">\n              <h2>Focus view: Top X most popular directors in selected film locations</h2>\n              <App kind=\"BarChart\"/>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["84","85"],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/reportWebVitals.js",[],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/App.js",["86","87","88"],"import React from 'react';\nimport Sk_BarChart from \"./Sk_BarChart\";\nimport Sk_PieChart from \"./Sk_PieChart\";\nimport csv from  './datasets/Film_Locations_in_San_Francisco.csv';\nimport Sk_VoronoiDiagram from './Sk_VoronoiDiagram';\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state ={\n      data: csv\n    };\n\n  }\n\n  render(){\n    if(this.props.kind === \"BarChart\"){\n      return (\n        <div>\n          <div id=\"container\"> \n          </div>\n          <Sk_BarChart data={this.state.data} width={700} height={200} />\n        </div>\n      );\n    }else if(this.props.kind === \"PieChart\"){\n      return (\n        <div>\n          <div id=\"container_pie\"> \n          </div>\n          <Sk_PieChart data={this.state.data} width={600} height={400} />\n        </div>\n      );\n    }else if(this.props.kind === \"VoronoiDiagram\"){\n      return (\n        <div>\n          <div id=\"container_VoronoiDiagram\"> \n          </div>\n          <Sk_VoronoiDiagram data={this.state.data} width={800} height={800} />\n        </div>\n      );\n    }\n    \n    return (\n      <div></div>\n    );\n\n  }\n\n}\n\nexport default App;\n","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/My_Navbar.js",[],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/Sk_BarChart.js",["89","90","91","92","93"],"import React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport { data_processing,data_cleaning } from './data_processing';\n\nclass Sk_BarChart extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value: 5,\n            location: \"City Hall\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n    }\n\n    handleChange(event){\n        this.setState({\n            value: event.target.value\n        });\n    }\n\n    handleSelect(event){\n        this.setState({\n            location:event.target.value\n        });\n    }\n\n    componentDidMount(){\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.drawChart();\n    }\n\n    data_pipeline(num, location, dataset){\n        let top_directors = [];\n        console.log(\"dataset: \",dataset);\n        let data = data_processing(data_cleaning(dataset,[\"Director\",\"Locations\"]),[\"Director\",\"Locations\"]);\n        \n        let director_stat = {};\n        let locations = new Set();\n        data.map(data=>{\n                locations.add(data[\"Locations\"].trim());\n                if(data[\"Locations\"].trim()!=location.trim()){\n                  return;\n                }\n                if(director_stat.hasOwnProperty(data[\"Director\"])){\n                  director_stat[data[\"Director\"]]+=1;\n                }else{\n                  director_stat[data[\"Director\"]]=1;\n                }\n              });\n        locations.delete(\"City Hall\");\n        d3.select(\"#locations\")\n          .selectAll(\"options\")\n          .data(locations)\n          .enter()\n          .append(\"option\")\n          .attr(\"value\",data=>data)\n          .text(data=>data);\n\n    for(let i = 0; i<num; i++){\n                let max_count = -1;\n                let max_director = \"\";\n                for(let prop in director_stat){\n                  if(director_stat[prop]>max_count){\n                    max_director = prop;\n                    max_count = director_stat[prop];\n                  }\n                }\n                top_directors.push({\n                name:max_director,\n                number:max_count\n                });\n                delete director_stat[max_director];\n            }\n        \n          console.log(top_directors);\n          return top_directors;\n    \n      }\n\n\n    drawChart(){\n            // log csv in browser console\n        d3.csv(this.props.data)\n        .then((dataset)=>{\n\n            let top_directors = this.data_pipeline(this.state.value,this.state.location,dataset);\n        \n            console.log(\"in drawchart:\",this.state.value);\n            console.log(top_directors);\n            if(!top_directors){\n                return;\n            }\n            console.log(\"in sk_barchart\");\n            console.log(top_directors);\n            let colors = d3.scaleSequential().domain([0,d3.max(top_directors,data=>data.number)]).interpolator(d3.interpolateBlues);\n            \n            \n             /********************************* \n            * Visualization codes start here\n            * ********************************/\n           var width = this.props.width;\n           var height = this.props.height;\n           var margin = {left: 50, right: 85, top: 20, bottom: 20}\n            \n    \n           let x_scale = d3.scaleBand()\n                      .domain(top_directors.map(data=>data.name))\n                      .rangeRound([margin.left, width - margin.right])\n                      .padding(0.1);\n    \n            let y_scale = d3.scaleLinear()\n                      .domain([0,d3.max(top_directors,data=>data.number)])\n                      .range([height-margin.bottom,margin.top]);\n            \n           d3.select(\"#container\").selectAll(\"*\").remove();\n           \n           var svg = d3.select('#container')\n                    .append('svg')\n                    .attr('width', width + margin.left + margin.right)\n                    .attr('height', height + margin.top + margin.bottom)\n                    .style(\"background\",\"grey\");\n    \n            let bars = svg.append(\"g\")\n               .selectAll(\"rect\")\n               .data(top_directors)\n               .join(\"rect\")\n               .attr(\"x\",data=>x_scale(data.name))\n               .attr(\"y\",data=>y_scale(data.number))\n               .attr(\"height\",data=>{return y_scale(0)-y_scale(data.number)})\n               .attr(\"width\",x_scale.bandwidth())\n               .attr(\"fill\",data=>colors(data.number));\n            \n            let captions = svg.append(\"g\")\n               .selectAll(\"text\")\n               .data(top_directors)\n               .join(\"text\")\n               .attr(\"text-anchor\",\"middle\")\n               .attr(\"x\",data=>x_scale(data.name)+x_scale.bandwidth()/2)\n               .attr(\"y\",data=>y_scale(data.number)+15)\n               .text(data=>data.name+\":\"+data.number)\n               .attr(\"font-size\", \"11px\")\n               .attr(\"fill\",\"white\");\n     \n           \n           // create a scatter plot\n        svg.append(\"g\")\n           .attr(\"transform\",\"translate(0,\"+(height-margin.bottom)+\")\")\n           .call(d3.axisBottom(x_scale));\n        svg.append(\"g\")\n           .attr(\"transform\",\"translate(\"+margin.left+\",0)\")\n           .call(d3.axisLeft(y_scale));\n           \n        let legends = svg.append(\"g\")\n           .attr(\"transform\",\"translate(\"+(width-50)+\",0)\")\n           .selectAll(\".category\").data(top_directors);\n    \n        let legend = legends.join(\"g\")\n              .classed(\"category\",true)\n              .attr(\"transform\",(data,index)=>{\n                return \"translate(0,\"+(index+1)*30+\")\";\n     \n            });\n        \n        legend.append(\"rect\")\n            .attr(\"width\",20)\n            .attr(\"height\",20)\n            .attr(\"fill\",data=>colors(data.number));\n    \n        legend.append(\"text\").text(data=>data.name)\n                           .attr(\"font-weight\",\"bold\")\n                           .attr(\"font-family\", \"Saira\")\n                           .attr(\"fill\",data=>colors(data.number))\n                           .attr(\"x\",20)\n                           .attr(\"y\",20);\n        \n        svg.append(\"text\")\n            .attr(\"class\", \"y label\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"x\", -40)\n            .attr(\"y\", 10)\n            .attr(\"dy\", \".5em\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .text(\"appearance (times)\")\n            .attr(\"font-size\",\"0.7em\")\n            .attr(\"fill\",\"black\");\n        \n        svg.append(\"text\")\n            .attr(\"class\", \"x label\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"x\", width/2)\n            .attr(\"y\", height+margin.bottom/2)\n            .text(\"directors\")\n            .attr(\"font-size\",\"0.7em\")\n            .attr(\"fill\",\"black\");\n\n        });\n\n\n    \n    }\n\n    render(){\n        return (\n        <div id={\"#\" + this.props.id}>\n            <form>\n                <label>\n                Top X directors:\n                <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                </label>\n            </form>\n            <label>\n                Film location:\n                <select id=\"locations\" value={this.state.location} onChange={this.handleSelect} >\n                    <option>City Hall</option>\n                </select>\n            </label>\n        </div>);\n    }\n}\n\nexport default Sk_BarChart;","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/data_processing.js",[],["94","95"],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/Sk_PieChart.js",["96","97"],"import React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport { data_processing,data_cleaning } from './data_processing';\n\nclass Sk_BarChart extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value: 5\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event){\n        this.setState({\n            value: event.target.value\n        });\n    }\n\n    componentDidMount(){\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.drawChart();\n    }\n\n    data_pipeline(num, dataset){\n  \n        let data = data_processing(data_cleaning(dataset,[\"Director\"]),[\"Director\"]);\n        let top_5_directors = [];\n        let director_stat = {}\n        data.map(data=>{\n          if(director_stat.hasOwnProperty(data[\"Director\"])){\n            director_stat[data[\"Director\"]]+=1;\n          }else{\n            director_stat[data[\"Director\"]]=1;\n          }\n        });\n        for(let i = 0; i<num; i++){\n          let max_count = -1;\n          let max_director = \"\";\n          for(let prop in director_stat){\n            if(director_stat[prop]>max_count){\n              max_director = prop;\n              max_count = director_stat[prop];\n            }\n          }\n          top_5_directors.push({\n          name:max_director,\n          number:max_count\n          });\n          delete director_stat[max_director];\n        }\n        return top_5_directors;\n    \n      }\n\n\n    drawChart(){\n            // log csv in browser console\n        d3.csv(this.props.data)\n        .then((dataset)=>{\n\n            let top_directors = this.data_pipeline(this.state.value,dataset);\n        \n\n            if(!top_directors){\n                return;\n            }\n\n            let pie_data = d3.pie().sort(null).value(data=>data.number)(top_directors);\n  \n            let colors = d3.scaleSequential().domain([0,d3.max(top_directors,data=>data.number)]).interpolator(d3.interpolateBlues);\n            var width = this.props.width;\n            var height = this.props.height;\n            d3.select('#container_pie').selectAll(\"*\").remove();\n            let svg = d3.select('#container_pie')\n                          .append('svg')\n                          .attr(\"width\",width)\n                          .attr(\"height\",height)\n                          .style(\"background\",\"grey\");\n            let segments = d3.arc()\n                             .innerRadius(0)\n                             .outerRadius(150)\n                             .padAngle(0.05)\n                             .padRadius(50);\n            let g = svg.append(\"g\")\n                      .attr(\"transform\",\"translate(200,200)\")\n                      .selectAll(\"path\")\n                      .data(pie_data)\n                      .join(\"path\")\n                      .attr(\"d\",segments)\n                      .attr(\"fill\",data=>colors(data.data.number));\n                      \n            let caption = svg.select(\"g\")\n                           .selectAll(\"text\")\n                           .data(pie_data);\n            //console.log(svg.select(\"g\").selectAll(\"text\"));\n            caption.join(\"text\").each(function(data){\n            let center = segments.centroid(data);\n            //console.log(this);\n            d3.select(this).attr(\"x\",center[0]-80)\n                           .attr(\"y\",center[1])\n                           .text(data.data.name+\":\"+data.data.number)\n                           .attr(\"font-family\",\"Saira\")\n                           .attr(\"font-weight\",\"bold\")\n                           .attr(\"fill\",\"white\");\n            });\n            let legends = svg.append(\"g\")\n                             .attr(\"transform\",\"translate(400,100)\")\n                             .selectAll(\".category\").data(pie_data);\n            let legend = legends.join(\"g\")\n                                .classed(\"category\",true)\n                                .attr(\"transform\",(data,index)=>{\n                                  return \"translate(0,\"+(index+1)*30+\")\";\n                                });\n            legend.append(\"rect\")\n                  .attr(\"width\",20)\n                  .attr(\"height\",20)\n                  .attr(\"fill\",data=>colors(data.data.number));\n            legend.append(\"text\").text(data=>data.data.name)\n                                 .attr(\"font-weight\",\"bold\")\n                                 .attr(\"font-family\", \"Saira\")\n                                 .attr(\"fill\",data=>colors(data.data.number))\n                                 .attr(\"x\",20)\n                                 .attr(\"y\",20);\n\n        });\n\n    \n    }\n\n    render(){\n        return (\n        <div id={\"#\" + this.props.id}>\n            <form>\n                <label>\n                Top X directors:\n                <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                </label>\n            </form>\n        </div>);\n    }\n}\n\nexport default Sk_BarChart;","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/Sk_VoronoiDiagram.js",["98"],"import React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport { data_processing,data_cleaning } from './data_processing';\n\nclass Sk_VoronoiDiagram extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            radius:25\n        };\n        this.handleChange = this.handleChange.bind(this);\n        \n    }\n\n    handleChange(event){\n        this.setState({\n            radius: event.target.value\n        });\n    }\n\n    componentDidMount(){\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.drawChart();\n    }\n\n    data_pipeline(dataset){\n  \n        let data = data_processing(data_cleaning(dataset,[\"Director\"]),[\"Director\"]);\n        let directors = {};\n        data.map(data=>{\n            if(directors.hasOwnProperty(data[\"Director\"])){\n                directors[data[\"Director\"]] += 1;\n            }else{\n                directors[data[\"Director\"]] = 1;\n            }\n        });\n\n        let keys = Object.keys(directors);\n        console.log(\"keys\",keys)\n        let results = keys.map(data=>{\n            return {Director:data, appearance:directors[data]}\n        });\n        console.log(\"results\",results)\n\n        return results;\n    \n      }\n\n\n    drawChart(){\n            // log csv in browser console\n        d3.csv(this.props.data)\n        .then((dataset)=>{\n\n            let top_directors = this.data_pipeline(dataset);\n        \n            console.log(\"in voronoi diagram\",top_directors);\n            if(!top_directors){\n                return;\n            }\n            let width = this.props.width;\n            let height = this.props.height;\n            let margin = {left: 50, right: 20, top: 20, bottom: 20}\n\n            d3.select('#container_VoronoiDiagram').selectAll(\"*\").remove();\n            let svg = d3.select('#container_VoronoiDiagram')\n                          .append('svg')\n                          .attr(\"width\",width)\n                          .attr(\"height\",height)\n                          .style(\"background\",\"grey\");\n\n\n\n            let x_scale = d3.scaleBand()\n                            .domain(top_directors.map(data=>data[\"Director\"]))\n                            .rangeRound([margin.left, width - margin.right])\n                            .padding(0.1);\n\n            let y_scale = d3.scaleLinear()\n                            .domain([0,d3.max(top_directors,data=>data[\"appearance\"])])\n                            .range([height-margin.bottom,margin.top]);\n\n            let colors = d3.scaleSequential().domain([0,d3.max(top_directors,data=>data[\"appearance\"])]).interpolator(d3.interpolateBlues);\n\n            let scatterplots = top_directors.map(data=>{\n                return [x_scale(data[\"Director\"]),y_scale(data[\"appearance\"]),data[\"appearance\"],data[\"Director\"]];\n            });\n\n            let delaunay = d3.Delaunay.from(scatterplots,data=>data[0],data=>data[1]);\n            let voronoi = delaunay.voronoi([ 0, 0, width, height ])\n\n            svg.selectAll('path')\n                .data( top_directors.map((d,i) => voronoi.renderCell(i)) )\n                .join('path')\n                .attr('d', data => data)\n                .style(\"fill\",\"grey\")\n                .style('opacity', 0.8)\n                .style('stroke', 'white')\n                .style('stroke-opacity', 1)\n\n            console.log(\"scatterplot\",scatterplots);\n            svg.selectAll(\"text\")\n                .data(scatterplots)\n                .enter()\n                .append(\"text\")\n                .attr(\"transform\",data=>{\n                    return \"translate(\"+data[0]+\",\"+data[1]+\")\";\n                })\n                .style(\"font-size\",data=>{\n                    return this.state.radius+\"px\";\n                })\n                .attr(\"fill\",data=>colors(data[2]))\n                .text(data=>data[3]);\n\n            svg.append(\"g\")\n                .attr(\"transform\",\"translate(\"+margin.left+\",0)\")\n                .call(d3.axisLeft(y_scale))\n                .attr(\"fill\",\"white\")\n                .style(\"color\",\"white\");\n\n            svg.append(\"text\")\n                .attr(\"class\", \"y label\")\n                .attr(\"text-anchor\", \"end\")\n                .attr(\"x\",-(width/2)+2*margin.top)\n                .attr(\"y\", 6)\n                .attr(\"dy\", \".75em\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .text(\"appearances (times)\")\n                .attr(\"fill\",\"white\");\n\n\n        });\n\n    \n    }\n\n    render(){\n        return (\n        <div id={\"#\" + this.props.id}>\n            <form>\n                <label for=\"vol\">voronoi diagram scatterplots font-size(px):</label>\n                <input type=\"range\" min=\"0\" max=\"25\" onChange={this.handleChange}/>\n            </form>\n        </div>);\n    }\n}\n\nexport default Sk_VoronoiDiagram;","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/index.js",["99","100","101","102"],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/My_Navbar.js",[],["103","104"],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/App.js",["105","106","107"],"import React from 'react';\nimport Sk_BarChart from \"./Sk_BarChart\";\nimport Sk_PieChart from \"./Sk_PieChart\";\nimport csv from  './datasets/Film_Locations_in_San_Francisco.csv';\nimport Sk_VoronoiDiagram from './Sk_VoronoiDiagram';\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state ={\n      data: csv\n    };\n\n  }\n\n  render(){\n    if(this.props.kind === \"BarChart\"){\n      return (\n        <div>\n          <div id=\"container\"> \n          </div>\n          <Sk_BarChart data={this.state.data} width={700} height={200} />\n        </div>\n      );\n    }else if(this.props.kind === \"PieChart\"){\n      return (\n        <div>\n          <div id=\"container_pie\"> \n          </div>\n          <Sk_PieChart data={this.state.data} width={600} height={400} />\n        </div>\n      );\n    }else if(this.props.kind === \"VoronoiDiagram\"){\n      return (\n        <div>\n          <div id=\"container_VoronoiDiagram\"> \n          </div>\n          <Sk_VoronoiDiagram data={this.state.data} width={800} height={400} />\n        </div>\n      );\n    }\n    \n    return (\n      <div></div>\n    );\n\n  }\n\n}\n\nexport default App;\n","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/reportWebVitals.js",[],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/Sk_BarChart.js",["108","109","110","111","112"],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/Sk_PieChart.js",["113","114"],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/Sk_VoronoiDiagram.js",["115","116","117","118"],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/data_processing.js",[],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework3/kunhuang/react-template/react-d3/src/Sk_CirclePlot.js",["119"],"import React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport { drag } from 'd3';\n\nclass Sk_CirclePlot extends Component{\n\n    componentDidMount(){\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.drawChart();\n    }\n\n    drawChart(){\n        \n        let data = this.props.data;\n        if(data == null){\n            return;\n        }\n        let width = this.props.width;\n        let height = this.props.height;\n        let radius = this.props.radius;\n        d3.select('#CirclePlot').selectAll(\"*\").remove();\n        let svg = d3.select('#CirclePlot')\n                    .append('svg')\n                    .attr(\"width\",width)\n                    .attr(\"height\",height)\n                    .style(\"background\",\"grey\");\n\n        const circles = data.map((data)=>{\n            data[\"cx\"] = Math.random() * (width - radius*2);\n            data[\"cy\"] = Math.random() * (height - radius*2);\n            return data;\n        });\n\n        let drag = d3.drag()\n                     .on(\"start\",(event,data)=>{\n                         d3.select(this).raise().attr(\"stroke\",\"black\");\n                     })\n                     .on(\"drag\",(event,data)=>{\n                        d3.select(this).attr(\"cx\", data.cx = event.x)\n                                        .attr(\"cy\", data.cy = event.y);\n                     })\n                     .on(\"end\",(event,data)=>{\n                        d3.select(this).attr(\"stroke\", null);\n                     });\n\n        svg.selectAll(\"circle\")\n            .data(circles)\n            .join(\"circle\")\n            .attr(\"cx\",data=>data[\"cx\"])\n            .attr(\"cy\",data=>data[\"cy\"])\n            .attr(\"r\",radius)\n            .attr(\"fill\",data=>data[\"color\"])\n            .call(drag);\n\n\n    }\n\n    render(){\n        return (\n        <div id={\"#\" + this.props.id}>\n\n        </div>);\n    }\n\n\n}\n\nexport default Sk_CirclePlot;",{"ruleId":"120","severity":1,"message":"121","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":12},{"ruleId":"120","severity":1,"message":"124","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":23,"column":7,"nodeType":"127","endLine":23,"endColumn":19},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"125","severity":1,"message":"132","line":23,"column":11,"nodeType":"127","endLine":23,"endColumn":74},{"ruleId":"125","severity":1,"message":"133","line":31,"column":11,"nodeType":"127","endLine":31,"endColumn":74},{"ruleId":"125","severity":1,"message":"134","line":39,"column":11,"nodeType":"127","endLine":39,"endColumn":80},{"ruleId":"135","severity":1,"message":"136","line":44,"column":22,"nodeType":"137","messageId":"138","endLine":44,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":46,"column":44,"nodeType":"141","messageId":"142","endLine":46,"endColumn":46},{"ruleId":"135","severity":1,"message":"143","line":47,"column":19,"nodeType":"144","messageId":"145","endLine":47,"endColumn":26},{"ruleId":"120","severity":1,"message":"146","line":128,"column":17,"nodeType":"122","messageId":"123","endLine":128,"endColumn":21},{"ruleId":"120","severity":1,"message":"147","line":138,"column":17,"nodeType":"122","messageId":"123","endLine":138,"endColumn":25},{"ruleId":"128","replacedBy":"148"},{"ruleId":"130","replacedBy":"149"},{"ruleId":"135","severity":1,"message":"143","line":34,"column":22,"nodeType":"137","messageId":"150","endLine":34,"endColumn":24},{"ruleId":"120","severity":1,"message":"151","line":89,"column":17,"nodeType":"122","messageId":"123","endLine":89,"endColumn":18},{"ruleId":"135","severity":1,"message":"143","line":34,"column":22,"nodeType":"137","messageId":"150","endLine":34,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":12},{"ruleId":"120","severity":1,"message":"124","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":23,"column":7,"nodeType":"127","endLine":23,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":33,"column":15,"nodeType":"127","endLine":33,"endColumn":35},{"ruleId":"128","replacedBy":"154"},{"ruleId":"130","replacedBy":"155"},{"ruleId":"125","severity":1,"message":"132","line":23,"column":11,"nodeType":"127","endLine":23,"endColumn":74},{"ruleId":"125","severity":1,"message":"133","line":31,"column":11,"nodeType":"127","endLine":31,"endColumn":74},{"ruleId":"125","severity":1,"message":"134","line":39,"column":11,"nodeType":"127","endLine":39,"endColumn":80},{"ruleId":"135","severity":1,"message":"136","line":44,"column":22,"nodeType":"137","messageId":"138","endLine":44,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":46,"column":44,"nodeType":"141","messageId":"142","endLine":46,"endColumn":46},{"ruleId":"135","severity":1,"message":"143","line":47,"column":19,"nodeType":"144","messageId":"145","endLine":47,"endColumn":26},{"ruleId":"120","severity":1,"message":"146","line":128,"column":17,"nodeType":"122","messageId":"123","endLine":128,"endColumn":21},{"ruleId":"120","severity":1,"message":"147","line":138,"column":17,"nodeType":"122","messageId":"123","endLine":138,"endColumn":25},{"ruleId":"135","severity":1,"message":"143","line":34,"column":22,"nodeType":"137","messageId":"150","endLine":34,"endColumn":24},{"ruleId":"120","severity":1,"message":"151","line":89,"column":17,"nodeType":"122","messageId":"123","endLine":89,"endColumn":18},{"ruleId":"120","severity":1,"message":"156","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":21},{"ruleId":"135","severity":1,"message":"143","line":38,"column":22,"nodeType":"137","messageId":"150","endLine":38,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":109,"column":65,"nodeType":"141","messageId":"142","endLine":109,"endColumn":67},{"ruleId":"139","severity":1,"message":"140","line":279,"column":104,"nodeType":"141","messageId":"142","endLine":279,"endColumn":106},{"ruleId":"120","severity":1,"message":"157","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","'Sk_BarChart' is defined but never used.","react/jsx-pascal-case","Imported JSX component My_Navbar must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-native-reassign",["158"],"no-negated-in-lhs",["159"],"Imported JSX component Sk_BarChart must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Sk_PieChart must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Sk_VoronoiDiagram must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'bars' is assigned a value but never used.","'captions' is assigned a value but never used.",["158"],["159"],"expectedInside","'g' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["158"],["159"],"'Sk_CirclePlot' is defined but never used.","'drag' is defined but never used.","no-global-assign","no-unsafe-negation"]