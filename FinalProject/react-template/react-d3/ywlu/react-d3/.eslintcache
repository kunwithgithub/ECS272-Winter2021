[{"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework3\\ywlu\\react-d3\\src\\index.js":"1","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework3\\ywlu\\react-d3\\src\\App.js":"2","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework3\\ywlu\\react-d3\\src\\reportWebVitals.js":"3","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework3\\ywlu\\react-d3\\src\\BarChart3.js":"4","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework3\\ywlu\\react-d3\\src\\BarChart4.js":"5","C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework3\\ywlu\\react-d3\\src\\BarChart2.js":"6","C:\\Users\\31639\\Desktop\\ecs272\\ywlufp\\ywlu\\react-d3\\src\\index.js":"7","C:\\Users\\31639\\Desktop\\ecs272\\ywlufp\\ywlu\\react-d3\\src\\App.js":"8","C:\\Users\\31639\\Desktop\\ecs272\\ywlufp\\ywlu\\react-d3\\src\\reportWebVitals.js":"9","C:\\Users\\31639\\Desktop\\ecs272\\ywlufp\\ywlu\\react-d3\\src\\BarChart4.js":"10","C:\\Users\\31639\\Desktop\\ecs272\\ywlufp\\ywlu\\react-d3\\src\\BarChart3.js":"11","C:\\Users\\31639\\Desktop\\ecs272\\ywlufp\\ywlu\\react-d3\\src\\BarChart2.js":"12","C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\index.js":"13","C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\App.js":"14","C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\reportWebVitals.js":"15","C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\BarChart4.js":"16","C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\BarChart3.js":"17","C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\BarChart2.js":"18","C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\GetData.js":"19"},{"size":517,"mtime":1613147886259,"results":"20","hashOfConfig":"21"},{"size":2772,"mtime":1613269125873,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1613147886259,"results":"23","hashOfConfig":"21"},{"size":12172,"mtime":1613268326117,"results":"24","hashOfConfig":"21"},{"size":7320,"mtime":1613268951937,"results":"25","hashOfConfig":"21"},{"size":11606,"mtime":1613269034870,"results":"26","hashOfConfig":"21"},{"size":517,"mtime":1613147886259,"results":"27","hashOfConfig":"28"},{"size":2441,"mtime":1614985574216,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1613147886259,"results":"30","hashOfConfig":"28"},{"size":7320,"mtime":1613268951937,"results":"31","hashOfConfig":"28"},{"size":12172,"mtime":1613268326117,"results":"32","hashOfConfig":"28"},{"size":10217,"mtime":1615326441499,"results":"33","hashOfConfig":"28"},{"size":517,"mtime":1613147886259,"results":"34","hashOfConfig":"35"},{"size":2748,"mtime":1615717142693,"results":"36","hashOfConfig":"35"},{"size":375,"mtime":1613147886259,"results":"37","hashOfConfig":"35"},{"size":7320,"mtime":1613268951937,"results":"38","hashOfConfig":"35"},{"size":7235,"mtime":1615720403190,"results":"39","hashOfConfig":"35"},{"size":9835,"mtime":1615716156949,"results":"40","hashOfConfig":"35"},{"size":5837,"mtime":1615716113037,"results":"41","hashOfConfig":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"10fby1j",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"29mg9r",{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"9hovtw",{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"73"},"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework3\\ywlu\\react-d3\\src\\index.js",[],["88","89"],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework3\\ywlu\\react-d3\\src\\App.js",[],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework3\\ywlu\\react-d3\\src\\reportWebVitals.js",[],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework3\\ywlu\\react-d3\\src\\BarChart3.js",["90","91","92","93","94","95","96","97","98","99","100"],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework3\\ywlu\\react-d3\\src\\BarChart4.js",["101","102","103","104","105"],"C:\\Users\\31639\\Desktop\\ecs272\\ECS272-Winter2021\\Homework3\\ywlu\\react-d3\\src\\BarChart2.js",["106"],"C:\\Users\\31639\\Desktop\\ecs272\\ywlufp\\ywlu\\react-d3\\src\\index.js",[],["107","108"],"C:\\Users\\31639\\Desktop\\ecs272\\ywlufp\\ywlu\\react-d3\\src\\App.js",["109","110"],"import React from 'react';\r\nimport BarChart4 from './BarChart4';\r\nimport BarChart3 from './BarChart3';\r\nimport BarChart2 from './BarChart2';\r\nimport data from './datasets/owid-covid-data.csv';\r\nimport data2 from './datasets/country_vaccinations.csv';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: data,\r\n            data2: data2,\r\n            id: \"chart-1\"\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Homework 3\r\n     * Yinwen Lu\r\n     * 2021/2/13\r\n     * Code may contain segment from template or online references\r\n     */\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <h2>Global Terro-activities data visualization</h2>\r\n                <i>Due to large amount of data, slight lag may appear, please operate after all views are loaded</i>\r\n\r\n                <div>\r\n                    <div className=\"container1c\">\r\n                        <div id=\"tooltip\" opacity=\"0.5\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"container2c\">\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div padding-top=\"50px\">\r\n                    <div id=\"container1b\">\r\n                        <BarChart2 data={this.state.data}  data2={this.state.data2} width={this.state.width} height={this.state.height}/>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n                    <div className=\"container1c\">\r\n                        <p>Select scatter line to display:</p><select id=\"selectButton\"></select>\r\n                    </div>\r\n\r\n                    <div className=\"container2c\">\r\n                        <div id=\"tooltip3\" opacity=\"0.5\"></div>\r\n                        <button type=\"button\" id=\"reset\">Reset</button>\r\n                        <div id = \"testsub\">\r\n                            <strong>Select number of terro-groups to display:</strong>\r\n\r\n                            <div>\r\n                            <button type=\"button\" id=\"button1\">Top5</button>\r\n                            <button type=\"button\" id=\"button2\">Top10</button>\r\n                            <button type=\"button\" id=\"button3\">Top15</button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\31639\\Desktop\\ecs272\\ywlufp\\ywlu\\react-d3\\src\\reportWebVitals.js",[],"C:\\Users\\31639\\Desktop\\ecs272\\ywlufp\\ywlu\\react-d3\\src\\BarChart4.js",["111","112","113","114","115"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass BarChart4 extends Component {\r\n\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n\r\n    drawChart() {\r\n        d3.csv(this.props.data)\r\n            .then(csv => {\r\n                // log csv in browser console\r\n                //console.log(csv);\r\n\r\n                // create data by selecting two columns from csv\r\n                var data = csv.map(row => {\r\n                    return {\r\n                        iyear: Number(row['iyear']),\r\n                        nkill: Number(row['nkill']),\r\n                        nwound: Number(row['nwound']),\r\n                        region: Number(row['region']),\r\n                        attacktype1: Number(row['attacktype1']),\r\n                        weaptype1: Number(row['weaptype1'])\r\n                    }\r\n                })\r\n\r\n                var filtered = data.filter(function (el) {\r\n                    return (el.nkill > 5) || (el.nwound > 5);\r\n                });\r\n\r\n                data = filtered;\r\n\r\n                var ndict = {\r\n                    \"iyear\": \"Time(year)\",\r\n                    \"region\": \"Region\",\r\n                    \"weaptype1\": \"Weapon Type\",\r\n                    \"attacktype1\": \"Type of Attack\",\r\n                    \"nkill\": \"Victim Killed\",\r\n                    \"nwound\": \"Victim Wounded\"\r\n\r\n                };\r\n\r\n                var atkdict = {\r\n                    1: \"Assassination\",\r\n                    2: \"Armed Assault\",\r\n                    3: \"Bombing/Explosion\",\r\n                    4: \"Hijacking\",\r\n                    5: \"Hostage Taking I\",\r\n                    6: \"Hostage Taking II\",\r\n                    7: \"Facility Attack\",\r\n                    8: \"Unarmed Assault\",\r\n                    9: \"Unknown\"\r\n                };\r\n\r\n                var regdict = {\r\n                    1: \"North America\",\r\n                    2: \"Central America & C\",\r\n                    3: \"South America\",\r\n                    4: \"East Asia\",\r\n                    5: \"Southeast Asia\",\r\n                    6: \"South Asia\",\r\n                    7: \"Central Asia\",\r\n                    8: \"Western Europe\",\r\n                    9: \"Eastern Europe\",\r\n                    10:\"ME & North Africa\",\r\n                    11:\"Sub-Saharan Africa\",\r\n                    12:\"Australasia & Oceania\"\r\n\r\n                };\r\n\r\n                var weapdict = {\r\n                    1: \"Biological\",\r\n                    2: \"Chemical\",\r\n                    3: \"Radiological\",\r\n                    4: \"???\",\r\n                    5: \"Firearms\",\r\n                    6: \"Explosives\",\r\n                    7: \"Fake Weapons\",\r\n                    8: \"Incendiary\",\r\n                    9: \"Melee\",\r\n                    10:\"Vehicle\",\r\n                    11:\"Sabotage Equipment\",\r\n                    12:\"other\",\r\n                    13:\"unknown\"\r\n\r\n                };\r\n\r\n\r\n                /*********************************\r\n                 * Visualization codes start here\r\n                 * ********************************/\r\n                var width = 800;\r\n                var height = 500;\r\n                var margin = {left: 10, right: 10, top: 40, bottom: 40}\r\n\r\n                var svg = d3.select('#container2b')\r\n                    .append('svg')\r\n                    .attr('width', width + margin.left + margin.right)\r\n                    .attr('height', height + margin.top + margin.bottom)\r\n\r\n                var view = svg.append(\"g\")\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n               // console.log(data[3]);\r\n\r\n                var dimensions = [\r\n                    'iyear',\r\n                    'region',\r\n                    'weaptype1',\r\n                    'attacktype1',\r\n                    'nkill',\r\n                    'nwound'];\r\n\r\n                var y = {}\r\n                var i = 0;\r\n\r\n                for (i in dimensions) {\r\n                    var name = dimensions[i]\r\n                  //  console.log(name)\r\n                    y[name] = d3.scaleLinear()\r\n                        .domain(d3.extent(data, d => {\r\n                            return d[name];\r\n                        }))\r\n                        .range([height, 0])\r\n\r\n                }\r\n\r\n                var x = d3.scalePoint()\r\n                    .range([0, width])\r\n                    .padding(1)\r\n                    .domain(dimensions);\r\n\r\n                function path(d) {\r\n                    return d3.line()(dimensions.map(d1 => {\r\n                        return [x(d1), y[d1](d[d1])];\r\n                    }));\r\n                }\r\n\r\n                view\r\n                    .selectAll(\"myPath\")\r\n                    .data(data)\r\n                    .enter().append(\"path\")\r\n                    .attr(\"d\", path)\r\n                    .style(\"fill\", \"none\")\r\n                    .style(\"stroke\", d => {\r\n                        var cs = d3.scaleLinear()\r\n                            .domain([0, 250, 1500])\r\n                            .range([\"lightyellow\", \"red\", \"black\"]);\r\n\r\n                        return cs(d.nkill)\r\n                    })\r\n                    .style(\"opacity\", 0.1)\r\n                    .attr(\"stroke-width\", 2)\r\n                    .attr(\"stroke-linecap\", \"round\")\r\n\r\n                view.selectAll(\"myAxis\")\r\n                    .data(dimensions).enter()\r\n                    .append(\"g\")\r\n                    .attr(\"transform\", d => {\r\n                        return \"translate(\" + x(d) + \")\";\r\n                    })\r\n                    .each(function (d) {\r\n                        if(d == \"iyear\"){\r\n                            d3.select(this).call(d3.axisLeft().scale(y[d])\r\n                                .tickFormat(function(d) { return d; })\r\n                            );\r\n                        }\r\n                        else if(d == \"region\"){\r\n                            d3.select(this).call(d3.axisLeft().scale(y[d])\r\n                                .tickFormat(function(d) { return regdict[d]; })\r\n                            );\r\n                        }\r\n                        else if(d == \"attacktype1\"){\r\n                            d3.select(this).call(d3.axisLeft().scale(y[d])\r\n                                .tickFormat(function(d) { return atkdict[d]; })\r\n                            );\r\n                        }\r\n                        else if(d == \"weaptype1\"){\r\n                            d3.select(this).call(d3.axisLeft().scale(y[d])\r\n                                .tickFormat(function(d) { return weapdict[d]; })\r\n                            );\r\n                        }\r\n                        else\r\n                        {\r\n                            d3.select(this).call(d3.axisLeft().scale(y[d]));\r\n                        }\r\n\r\n                    })\r\n\r\n                    .append(\"text\")\r\n                    .style(\"text-anchor\", \"middle\")\r\n                    .attr(\"y\", -10)\r\n                    .text(function (d) {\r\n                        console.log(d)\r\n                        return ndict[d];\r\n                    })\r\n                    .style(\"fill\", \"black\")\r\n\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div id={\"#\" + this.props.id}></div>\r\n    }\r\n}\r\n\r\nexport default BarChart4;","C:\\Users\\31639\\Desktop\\ecs272\\ywlufp\\ywlu\\react-d3\\src\\BarChart3.js",["116","117","118","119","120","121","122","123","124","125","126"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass BarChart3 extends Component {\r\n\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n\r\n    drawChart() {\r\n        d3.csv(this.props.data)\r\n            .then(csv => {\r\n                // log csv in browser console\r\n                //console.log(csv);\r\n\r\n                // create data by selecting two columns from csv\r\n                var data = csv.map(row => {\r\n                    return {\r\n                        iyear: Number(row['iyear']),\r\n                        nkill: Number(row['nkill']),\r\n                        nwound: Number(row['nwound']),\r\n                        gname: row['gname']\r\n                    }\r\n                })\r\n\r\n                var filtered = data.filter(function (el) {\r\n                    return (el.gname != \"Unknown\");\r\n                });\r\n\r\n                var holderk = {};\r\n                var holderw = {};\r\n\r\n                filtered.forEach(function (d) {\r\n                    if (holderk.hasOwnProperty(d.gname)) {\r\n                        holderk[d.gname] = holderk[d.gname] + d.nkill;\r\n                    } else {\r\n                        holderk[d.gname] = d.nkill;\r\n                    }\r\n                    if (holderw.hasOwnProperty(d.gname)) {\r\n                        holderw[d.gname] = holderw[d.gname] + d.nwound;\r\n                    } else {\r\n                        holderw[d.gname] = d.nwound;\r\n                    }\r\n                });\r\n\r\n                var filtered2 = [];\r\n\r\n                for (var i in holderk) {\r\n                    filtered2.push({gname: i, nkill: holderk[i], nwound: holderw[i]});\r\n                }\r\n\r\n\r\n                var filtered2 = filtered2.filter(function (el) {\r\n                    return (el.nkill != 0) || (el.nwound != 0);\r\n                });\r\n\r\n\r\n                filtered2 = filtered2.sort(function (a, b) {\r\n                    return b.nkill + b.nwound - a.nkill - a.nwound;\r\n                }).slice(0, 15)\r\n\r\n                data = filtered2;\r\n                console.log(data.slice(0, 10));\r\n\r\n\r\n                /*********************************\r\n                 * Visualization codes start here\r\n                 * ********************************/\r\n                var width = 600;\r\n                var height = 400;\r\n                var margin = {left: 80, right: 80, top: 60, bottom: 50}\r\n\r\n                var svg = d3.select('#container3b')\r\n                    .append('svg')\r\n                    .attr('width', width + margin.left + margin.right)\r\n                    .attr('height', height + margin.top + margin.bottom)\r\n\r\n                var view = svg.append(\"g\")\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n                var tooltip2 = document.getElementById('tooltip2')\r\n                var tooltip3 = document.getElementById('tooltip3')\r\n\r\n                update(10);\r\n\r\n\r\n\r\n                function update(n) {\r\n                    tooltip2.innerHTML = ('Hover over histogram to show accurate data' );\r\n                    tooltip3.innerHTML = ('Select histograms to show accumulative data' );\r\n                    var kn = 0;\r\n                    var wn = 0;\r\n                    view.selectAll(\"rect\").remove()\r\n                    view.selectAll(\"g\").remove()\r\n                    data = filtered2.slice(0, Number(n));\r\n                    // X axis\r\n                    var x = d3.scaleBand()\r\n                        .range([0, width])\r\n                        .domain(data.map(function (d) {\r\n                            return d.gname;\r\n                        }))\r\n                        .padding(0.2)\r\n\r\n                    view.append(\"g\")\r\n                        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n                        .call(d3.axisBottom(x))\r\n                        .selectAll(\"text\")\r\n                        .style(\"text-anchor\", \"middle\")\r\n                        .attr(\"transform\", \"translate(0,5)rotate(-13)\")\r\n\r\n\r\n                    var y = d3.scaleLinear()\r\n                        .domain([0, d3.max(data, d => d.nkill)])\r\n                        .range([height, 0]);\r\n\r\n\r\n                    view.append(\"g\")\r\n                        .call(d3.axisLeft(y).ticks(10))\r\n\r\n                        .append(\"text\")\r\n                        .attr(\"fill\", \"#000\")\r\n                        .attr(\"transform\", \"rotate(-90)\")\r\n                        .attr(\"x\", -height / 2)\r\n                        .attr(\"y\", -margin.left)\r\n                        .attr(\"dy\", \"0.71em\")\r\n                        .attr(\"text-anchor\", \"end\")\r\n                        .text(\"Number of Victims\");\r\n\r\n                    var bar1 = view.selectAll(\"mybar\")\r\n                        .data(data)\r\n                        .enter()\r\n                        .append(\"rect\")\r\n                        .attr(\"x\", d => {\r\n                            return x(d.gname);\r\n                        })\r\n                        .attr(\"y\", 400)\r\n\r\n                        .attr(\"width\", x.bandwidth() - 10)\r\n                        .attr(\"height\", 1)\r\n                        .attr(\"fill\", \"red\")\r\n                        .attr('opacity', 0.5)\r\n                        .attr(\"transform\", \"translate(-5,0)\")\r\n                        .on(\"mouseover\", function (event, d) {\r\n                            //console.log(event);\r\n                            d3.select(this)\r\n                                .transition()\r\n                                .duration(500)\r\n                                .style('fill', 'black')\r\n                            tooltip2.innerHTML = ('In total, by terro-group ' + d.gname + ',  ' + d.nkill + ' victims are killed');\r\n                        })\r\n                        .on(\"mouseout\", function (d) {\r\n                            d3.select(this)\r\n                                .transition()\r\n                                .duration(500)\r\n                                .style('fill', 'red')\r\n                            tooltip2.innerHTML = ('Hover over histogram to show accurate data');\r\n                        })\r\n                        .on(\"click\", function (event, d) {\r\n                            if (!d3.select(this).classed(\"selected\")) {\r\n                                kn += d.nkill\r\n                                d3.select(this).classed(\"selected\", true)\r\n\r\n\r\n                                updatebar(wn,kn)\r\n                            } else {\r\n                                kn -= d.nkill\r\n                                d3.select(this).classed(\"selected\", false)\r\n\r\n                                updatebar(wn,kn)\r\n                            }\r\n                        })\r\n\r\n\r\n                    bar1\r\n                        .transition()\r\n                        .duration(2000)\r\n                        .attr(\"height\", d => {\r\n                            return height - y(d.nkill)\r\n                        })\r\n                        .attr(\"y\", d => {\r\n                            return y(d.nkill);\r\n\r\n                        })\r\n\r\n                    var bar2 = view.selectAll(\"mybar2\")\r\n                        .data(data)\r\n                        .enter()\r\n                        .append(\"rect\")\r\n                        .attr(\"x\", d => {\r\n                            return x(d.gname);\r\n                        })\r\n                        .attr(\"y\", 400)\r\n                        .attr(\"width\", x.bandwidth() - 10)\r\n                        .attr(\"height\", 1)\r\n\r\n                        .attr(\"fill\", \"orange\")\r\n                        .attr('opacity', 0.5)\r\n                        .attr(\"transform\", \"translate(5,0)\")\r\n                        .on(\"mouseover\", function (event, d) {\r\n                            //console.log(event);\r\n                            d3.select(this)\r\n                                .transition()\r\n                                .duration(500)\r\n                                .style('fill', 'black')\r\n                            tooltip2.innerHTML = ('In total, by terro-group ' + d.gname + ', ' + d.nwound + ' victims are wounded');\r\n                        })\r\n                        .on(\"mouseout\", function (d) {\r\n                            d3.select(this)\r\n                                .transition()\r\n                                .duration(500)\r\n                                .style('fill', 'orange')\r\n                            tooltip2.innerHTML = ('Hover over histogram to show accurate data');\r\n                        })\r\n\r\n                        .on(\"click\", function (event, d) {\r\n                            if (!d3.select(this).classed(\"selected\")) {\r\n                                wn += d.nwound\r\n                                d3.select(this).classed(\"selected\", true)\r\n\r\n                                updatebar(wn,kn)\r\n                            } else {\r\n                                wn -= d.nwound\r\n                                d3.select(this).classed(\"selected\", false)\r\n\r\n                                updatebar(wn,kn)\r\n                            }\r\n                        })\r\n                    bar2\r\n                        .transition()\r\n                        .duration(2000)\r\n                        .attr(\"height\", d => {\r\n                            return height - y(d.nwound);\r\n                        })\r\n                        .attr(\"y\", d => {\r\n                            return y(d.nwound);\r\n                        })\r\n\r\n                }\r\n\r\n                function updatebar(n1,n2){\r\n                    if (n1 == 0 && n2 == 0)\r\n                    {\r\n                        tooltip3.innerHTML = ('Select histograms (by clicking) to show accumulative data')\r\n                        return\r\n                    }\r\n                    if (n1 != 0 && n2 == 0)\r\n                    {\r\n                        tooltip3.innerHTML = ('The total number of wounded victim for selected group(s) is ' + n1);\r\n                        return;\r\n                    }\r\n                    if (n1 == 0 && n2 != 0)\r\n                    {\r\n                        tooltip3.innerHTML = ('The total number of killed victim for selected group(s) is ' + n2);\r\n                        return;\r\n                    }\r\n                    tooltip3.innerHTML = ('The total number of wounded victim for selected group(s) is ' + n1\r\n                        +\"</Br>\"+ 'The total number of Killed victim for selected group(s) is ' + n2);\r\n                }\r\n\r\n                d3.select(\"#button1\").on(\"click\", function (d) {\r\n                    update(5)\r\n                })\r\n                d3.select(\"#button2\").on(\"click\", function (d) {\r\n                    update(10)\r\n                })\r\n                d3.select(\"#button3\").on(\"click\", function (d) {\r\n                    update(15)\r\n                })\r\n                d3.select(\"#reset\").on(\"click\", function (d) {\r\n                    view.selectAll(\"rect\")\r\n\r\n                        .classed(\"selected\",false)\r\n                    updatebar(0,0)\r\n                })\r\n\r\n                svg.append('rect')\r\n                    .attr('x', 390)\r\n                    .attr('y', 115)\r\n                    .attr('width', 230)\r\n                    .attr('height', 45)\r\n                    .attr('stroke', 'black')\r\n                    .attr('fill', 'none');\r\n                svg.append(\"circle\").attr(\"cx\", 400).attr(\"cy\", 130).attr(\"r\", 6).style(\"fill\", \"red\").attr('opacity', 0.5)\r\n                svg.append(\"circle\").attr(\"cx\", 400).attr(\"cy\", 148).attr(\"r\", 6).style(\"fill\", \"orange\").attr('opacity', 0.5)\r\n                svg.append(\"text\").attr(\"x\", 410).attr(\"y\", 131).text(\"Killed\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\", \"middle\")\r\n                svg.append(\"text\").attr(\"x\", 410).attr(\"y\", 149).text(\"Wounded\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\", \"middle\")\r\n                svg.append(\"text\").attr(\"x\", 480).attr(\"y\", 139).text(\"Victim by the group\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\", \"middle\")\r\n\r\n\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div id={\"#\" + this.props.id}></div>\r\n    }\r\n}\r\n\r\nexport default BarChart3;","C:\\Users\\31639\\Desktop\\ecs272\\ywlufp\\ywlu\\react-d3\\src\\BarChart2.js",["127","128"],"C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\index.js",[],["129","130"],"C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\App.js",["131"],"C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\reportWebVitals.js",[],"C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\BarChart4.js",["132","133","134","135","136"],"C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\BarChart3.js",["137","138","139"],"C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\BarChart2.js",["140","141","142","143","144","145"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\nimport {getData, getData_for_country, pack} from \"./GetData.js\"\r\n\r\n\r\nclass BarChart2 extends Component {\r\n\r\n    componentDidMount() {\r\n        this.drawChart(\"USA\");\r\n    }\r\n\r\n\r\n    drawChart(iso) {\r\n        //getData1();\r\n\r\n        getData_old(function () {\r\n            console.log('loading finished');\r\n            var datapack = pack\r\n            var data = getData_for_country(pack.data,iso);\r\n            var CList = datapack.CList\r\n            var c = iso\r\n            //console.log(d3.max(pack.CList, d => d.total_vac/d.population))\r\n            /*********************************\r\n             * Visualization codes start here\r\n             * *******************************/\r\n            var width = 1600;\r\n            var height = 600;\r\n            var margin = {left: 80, right: 80, top: 60, bottom: 50}\r\n\r\n            var svg = d3.select('#container1b')\r\n                .append('svg')\r\n                .attr('width', width + margin.left + margin.right)\r\n                .attr('height', height + margin.top + margin.bottom)\r\n\r\n            var view = svg.append(\"g\")\r\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n            var x = d3.scaleTime()\r\n                .domain([d3.min(data, d => d.date), d3.max(data, d => d.date)])\r\n                .range([0, width]);\r\n\r\n            var y = d3.scaleLinear()\r\n                .domain([0,  Math.max(d3.max(data,d => d.total_case),d3.max(data,d => d.total_vaccinated),d3.max(data,d => d.daily_vaccinated))])\r\n                .range([height, 0]);\r\n\r\n            var tooltip = document.getElementById('tooltip')\r\n            // create a scatter plot\r\n            tooltip.innerHTML = ('Currently displaying country is:' + CList.find(x => x.iso === c).name);\r\n\r\n            var scatterPlot2 = view.append(\"g\")\r\n                .selectAll(\"dot\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"circle\")\r\n                .attr(\"cx\", function (d) {\r\n                    return x(d.date)\r\n                })\r\n                .attr(\"cy\", function (d) {\r\n                    return y(d.total_case)\r\n                })\r\n                .attr(\"r\", 8)\r\n                .attr(\"fill\", \"orange\")\r\n                .attr('opacity', 0.8)\r\n\r\n            var scatterPlot = view.append(\"g\")\r\n                .selectAll(\"dot\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"circle\")\r\n                .attr(\"cx\", function (d) {\r\n                    return x(d.date)\r\n                })\r\n                .attr(\"cy\", function (d) {\r\n                    return y(d.total_deaths)\r\n                })\r\n                .attr(\"r\", 8)\r\n                .attr(\"fill\", \"red\")\r\n                .attr('opacity', 0.8)\r\n\r\n            var scatterPlot3 = view.append(\"g\")\r\n                .selectAll(\"dot\")\r\n\r\n                .data(data)\r\n                .enter()\r\n                .append(\"circle\")\r\n                .attr(\"cx\", function (d) {\r\n                    return x(d.date)\r\n                })\r\n                .attr(\"cy\", function (d) {\r\n                    return y(d.daily_vaccinated)\r\n                })\r\n                .attr(\"r\", 8)\r\n                .attr(\"fill\", \"blue\")\r\n                .attr('opacity', 0.8)\r\n\r\n            var scatterPlot4 = view.append(\"g\")\r\n\r\n                .selectAll(\"dot\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"circle\")\r\n                .attr(\"cx\", function (d) {\r\n                    return x(d.date)\r\n                })\r\n                .attr(\"cy\", function (d) {\r\n                    return y(d.total_vaccinated)\r\n                })\r\n                .attr(\"r\", 8)\r\n                .attr(\"fill\", \"green\")\r\n                .attr('opacity', 0.8)\r\n\r\n\r\n            // Function that is triggered when brushing is performed\r\n            function updateChart(event) {\r\n                var extent = event.selection\r\n                var t1 = 0;\r\n                var t2 = 0;\r\n\r\n\r\n                if (brush.empty()) {\r\n                    t1 = 0;\r\n                    t2 = 0;\r\n                    tooltip.innerHTML = ('brush dots to show accumulative data');\r\n                } else {\r\n\r\n                    data.forEach(function (d) {\r\n                        if (isBrushed(extent, x(d.date), y(d.total_deaths)))\r\n                            t1 += d.total_deaths;\r\n                        if (isBrushed(extent, x(d.date), y(d.total_cases)))\r\n                            t2 += d.total_cases;\r\n                    });\r\n                    tooltip.innerHTML = (\"In the selected region, the number of killed victim is \" + t1 + \", the number of wounded victim is \" + t2 + \"<br />The ratio is \" + (t1 / t2).toFixed(2) + \" to 1\");\r\n                    //console.log(t)\r\n                    scatterPlot.classed(\"selected\", function (d) {\r\n                        return isBrushed(extent, x(d.date), y(d.total_deaths))\r\n                    })\r\n                    scatterPlot2.classed(\"selected\", function (d) {\r\n                        return isBrushed(extent, x(d.date), y(d.total_cases))\r\n                    })\r\n                }\r\n\r\n\r\n            }\r\n\r\n            // A function that return TRUE or FALSE according if a dot is in the selection or not\r\n            function isBrushed(brush_coords, cx, cy) {\r\n                if (brush_coords === null) {\r\n                    return false\r\n                }\r\n                var x0 = brush_coords[0][0],\r\n                    x1 = brush_coords[1][0],\r\n                    y0 = brush_coords[0][1],\r\n                    y1 = brush_coords[1][1];\r\n                return x0 <= cx && cx <= x1 && y0 <= cy && cy <= y1;    // This return TRUE or FALSE depending on if the points is in the selected area\r\n            }\r\n\r\n\r\n            var l1 = view.append(\"path\")\r\n                .datum(data)\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", \"black\")\r\n                .attr(\"stroke-width\", 2)\r\n                .attr(\"stroke-dasharray\", \"10,3\")\r\n                .attr(\"stroke-linecap\", \"round\")\r\n                .attr('opacity', 0.8)\r\n                .attr(\"d\", d3.line()\r\n                    .defined(function (d) { return d.total_deaths !== 0; })\r\n                    .x(function (d) {\r\n                        return x(d.date)\r\n                    })\r\n                    .y(function (d) {\r\n                        return y(d.total_deaths)\r\n                    })\r\n                )\r\n            var l2 = view.append(\"path\")\r\n                .datum(data)\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", \"gray\")\r\n                .attr(\"stroke-width\", 2)\r\n                .attr(\"stroke-dasharray\", \"5,3\")\r\n                .attr(\"stroke-linecap\", \"round\")\r\n                .attr('opacity', 0.8)\r\n                .attr(\"d\", d3.line()\r\n                    .defined(function (d) { return d.total_case !== 0; })\r\n                    .x(function (d) {\r\n                        return x(d.date)\r\n                    })\r\n                    .y(function (d) {\r\n                        return y(d.total_case)\r\n                    })\r\n                )\r\n            var l3 = view.append(\"path\")\r\n                .datum(data)\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", \"gray\")\r\n                .attr(\"stroke-width\", 2)\r\n                .attr(\"stroke-dasharray\", \"5,3\")\r\n                .attr(\"stroke-linecap\", \"round\")\r\n                .attr('opacity', 0.8)\r\n                .attr(\"d\", d3.line()\r\n                    .defined(function (d) { return d.daily_vaccinated !== 0; })\r\n                    .x(function (d) {\r\n                        return x(d.date)\r\n                    })\r\n                    .y(function (d) {\r\n                        return y(d.daily_vaccinated)\r\n                    })\r\n                )\r\n            var l4 = view.append(\"path\")\r\n\r\n                .datum(data)\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", \"gray\")\r\n                .attr(\"stroke-width\", 2)\r\n                .attr(\"stroke-dasharray\", \"5,3\")\r\n                .attr(\"stroke-linecap\", \"round\")\r\n                .attr('opacity', 0.8)\r\n                .attr(\"d\", d3.line()\r\n                    .defined(function (d) { return d.total_vaccinated !== 0; })\r\n                    .x(function (d) {\r\n                        return x(d.date)\r\n                    })\r\n                    .y(function (d) {\r\n                        return y(d.total_vaccinated)\r\n                    })\r\n                )\r\n            // x axis\r\n            view.append(\"g\")\r\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n                .call(d3.axisBottom(x).ticks(10))\r\n                .append(\"text\")\r\n                .attr(\"fill\", \"#000\")\r\n                .attr(\"x\", width / 2)\r\n                .attr('y', margin.bottom / 2)\r\n                .attr(\"dy\", \"0.71em\")\r\n                .attr(\"text-anchor\", \"end\")\r\n                .text(\"Date\");\r\n\r\n            // y axis\r\n            view.append(\"g\")\r\n                .call(d3.axisLeft(y).ticks(10))\r\n                .append(\"text\")\r\n                .attr(\"fill\", \"#000\")\r\n                .attr(\"transform\", \"rotate(-90)\")\r\n                .attr(\"x\", -height / 2)\r\n                .attr(\"y\", -margin.left)\r\n                .attr(\"dy\", \"0.71em\")\r\n                .attr(\"text-anchor\", \"end\")\r\n                .text(\"Number of Cases\");\r\n            var brush = view\r\n                .call(d3.brush()\r\n                    .extent([[-10, -10], [1610, 610]])\r\n                    .on(\"end\", updateChart)\r\n                )\r\n\r\n        });\r\n    //getData(()=>(console.log('aaaa')))\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return <div id={\"#\" + this.props.id}></div>\r\n    }\r\n}\r\n\r\nexport default BarChart2;","C:\\Users\\31639\\Desktop\\ecs272\\fp\\ECS272-Winter2021\\FinalProject\\react-template\\react-d3\\ywlu\\react-d3\\src\\GetData.js",["146"],"import * as d3 from \"d3\";\r\nimport data from './datasets/owid-covid-data.csv';\r\nimport data2 from './datasets/country_vaccinations.csv';\r\nimport data3 from './datasets/countries_codes_and_coordinates.csv';\r\nexport var pack = {};\r\n\r\nexport function getData_for_country(dpack, iso) {\r\n\r\n    var outp = dpack.filter(function (data) {\r\n\r\n        return data.iso === iso;\r\n    });\r\n\r\n    return outp\r\n\r\n}\r\n\r\nexport function getData_old(_callback) {\r\n\r\n    pack = require('./datasets/demodata.json');\r\n\r\n    _callback()\r\n\r\n}\r\n\r\nexport async function getData( _callback) {\r\n    Promise.all([\r\n        d3.csv(data),\r\n        d3.csv(data2),\r\n        d3.csv(data3)\r\n    ]).then(([csv1, csv2, csvgeo]) => {\r\n\r\n        function getnum(x) {\r\n            var t = Number(x)\r\n            return (t<=0 || t===null) ? 0 : t\r\n        }\r\n        var data = csv1.map(row => {\r\n            return {\r\n                iso: row['iso_code'],\r\n                date: Date.parse(row['date']),\r\n                total_case: Number(row['total_cases']),\r\n                total_deaths: Number(row['total_deaths']),\r\n                new_cases: getnum(Number(row['new_cases'])),\r\n                new_deaths: getnum(Number(row['new_deaths'])),\r\n                population: Number(row['population'])\r\n\r\n            }\r\n        })\r\n        var data2 = csv2.map(row => {\r\n            return {\r\n                iso: row['iso_code'],\r\n                date: Date.parse(row['date']),\r\n                daily_vaccinated: Number(row['daily_vaccinations']),\r\n                total_vaccinated: Number(row['total_vaccinations'])\r\n            }\r\n        })\r\n        var datag = csvgeo.map(row => {\r\n            return {\r\n                name: row['Country'],\r\n                iso: row['Alpha-3 code'].substring(2, 5),\r\n                lat: Number(row['Latitude (average)'].substring(2, row['Latitude (average)'].length - 1)),\r\n                lng: Number(row['Longitude (average)'].substring(2, row['Longitude (average)'].length - 1))\r\n            }\r\n        })\r\n\r\n        data2.forEach(function (rv) {\r\n            var result = data.filter(function (rc) {\r\n                return rc.iso === rv.iso && rc.date === rv.date;\r\n            });\r\n\r\n            rv.total_case = (result[0] !== undefined) ? result[0].total_case : null;\r\n            rv.total_deaths = (result[0] !== undefined) ? result[0].total_deaths : null;\r\n            rv.new_cases = (result[0] !== undefined) ? result[0].new_cases : null;\r\n            rv.new_deaths = (result[0] !== undefined) ? result[0].new_deaths : null;\r\n            rv.population = (result[0] !== undefined) ? result[0].population : null;\r\n\r\n            var result = datag.filter(function (rc) {\r\n                return rc.iso === rv.iso;\r\n            });\r\n            rv.name = (result[0] !== undefined) ? result[0].name : null;\r\n            rv.lng = (result[0] !== undefined) ? result[0].lng : null;\r\n            rv.lat = (result[0] !== undefined) ? result[0].lat : null;\r\n        });\r\n\r\n        //console.log(data2);\r\n        // console.log(data)\r\n        /**\r\n         var filtered = data.filter(function (el) {\r\n                    return (el.gname != \"Unknown\");\r\n                });\r\n         */\r\n        var holderC = {};\r\n        var holderD = {};\r\n\r\n        data.forEach(function (d) {\r\n            if (holderC.hasOwnProperty(d.iso)) {\r\n                holderC[d.iso] = holderC[d.iso] + d.new_cases;\r\n            } else {\r\n                holderC[d.iso] = d.new_cases;\r\n            }\r\n            if (holderD.hasOwnProperty(d.gname)) {\r\n                holderD[d.iso] = holderD[d.iso] + d.new_deaths;\r\n            } else {\r\n                holderD[d.iso] = d.new_deaths;\r\n            }\r\n        });\r\n\r\n        var filteredC = [];\r\n\r\n        datag.forEach(function (d) {\r\n            filteredC.push({\r\n                name: d.name,\r\n                iso: d.iso,\r\n                population:(data.find(x => x.iso === d.iso) !== undefined) ? data.find(x => x.iso === d.iso).population : 0,\r\n                total_deaths:holderD[d.iso],\r\n                total_case: holderC[d.iso],\r\n                total_vac: (data2.find(x => x.iso === d.iso) !== undefined) ? data2.reverse().find(x => x.iso === d.iso).total_vaccinated : 0,\r\n                lat: d.lat,\r\n                lng: d.lng\r\n            });\r\n        })\r\n        data.reverse()\r\n        data2.reverse()\r\n        filteredC = filteredC.filter(function (rc) {\r\n            return rc.total_case !== undefined && rc.population !== 0;\r\n        });\r\n        //console.log(filteredC)\r\n        filteredC.forEach(function (d) {\r\n            var l = []\r\n\r\n            filteredC.forEach(function (d1) {\r\n\r\n                l.push({iso: d1.iso, dis: Math.sqrt(Math.pow(d1.lat - d.lat, 2) + Math.pow(d1.lng - d.lng, 2))})\r\n            })\r\n            l = l.sort(function (a, b) {\r\n                return a.dis - b.dis\r\n            }).slice(1, 6)\r\n            //console.log(l)\r\n            d.close = l\r\n        })\r\n\r\n        //console.log(filteredC);\r\n\r\n        //data = filtered2\r\n        console.log(\"good\");\r\n\r\n        data2 = data2.filter(function (data) {\r\n            return data.date !== null && data.iso !== \"\";\r\n        });\r\n        /**\r\n        var c = datag[Math.floor(Math.random() * Math.floor(datag.length))].iso\r\n        while (filteredC.find(x => x.iso === c) === undefined || filteredC.find(x => x.iso === c).total_case === 0) {\r\n            c = datag[Math.floor(Math.random() * Math.floor(datag.length))].iso;\r\n        }\r\n\r\n        var c = get_iso\r\n\r\n        data = data2.filter(function (data) {\r\n\r\n            return data.iso === c;\r\n        });\r\n         */\r\n        data = data2\r\n\r\n        //console.log(data)\r\n        data.sort((a, b) => a.date - b.date || a.iso - b.iso)\r\n        pack = {data: data, CList: filteredC}\r\n        console.log(pack);\r\n\r\n        _callback();\r\n    })\r\n\r\n}\r\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":27,"column":38,"nodeType":"153","messageId":"154","endLine":27,"endColumn":40},{"ruleId":"155","severity":1,"message":"156","line":53,"column":21,"nodeType":"157","messageId":"158","endLine":53,"endColumn":30},{"ruleId":"151","severity":1,"message":"152","line":54,"column":38,"nodeType":"153","messageId":"154","endLine":54,"endColumn":40},{"ruleId":"151","severity":1,"message":"152","line":54,"column":58,"nodeType":"153","messageId":"154","endLine":54,"endColumn":60},{"ruleId":"151","severity":1,"message":"159","line":242,"column":28,"nodeType":"153","messageId":"154","endLine":242,"endColumn":30},{"ruleId":"151","severity":1,"message":"159","line":242,"column":39,"nodeType":"153","messageId":"154","endLine":242,"endColumn":41},{"ruleId":"151","severity":1,"message":"152","line":247,"column":28,"nodeType":"153","messageId":"154","endLine":247,"endColumn":30},{"ruleId":"151","severity":1,"message":"159","line":247,"column":39,"nodeType":"153","messageId":"154","endLine":247,"endColumn":41},{"ruleId":"151","severity":1,"message":"159","line":252,"column":28,"nodeType":"153","messageId":"154","endLine":252,"endColumn":30},{"ruleId":"151","severity":1,"message":"152","line":252,"column":39,"nodeType":"153","messageId":"154","endLine":252,"endColumn":41},{"ruleId":"160","severity":1,"message":"161","line":258,"column":33,"nodeType":"153","messageId":"162","endLine":258,"endColumn":34},{"ruleId":"163","severity":1,"message":"164","line":123,"column":49,"nodeType":"165","messageId":"166","endLine":125,"endColumn":26},{"ruleId":"151","severity":1,"message":"159","line":165,"column":30,"nodeType":"153","messageId":"154","endLine":165,"endColumn":32},{"ruleId":"151","severity":1,"message":"159","line":170,"column":35,"nodeType":"153","messageId":"154","endLine":170,"endColumn":37},{"ruleId":"151","severity":1,"message":"159","line":175,"column":35,"nodeType":"153","messageId":"154","endLine":175,"endColumn":37},{"ruleId":"151","severity":1,"message":"159","line":180,"column":35,"nodeType":"153","messageId":"154","endLine":180,"endColumn":37},{"ruleId":"151","severity":1,"message":"152","line":27,"column":38,"nodeType":"153","messageId":"154","endLine":27,"endColumn":40},{"ruleId":"147","replacedBy":"167"},{"ruleId":"149","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":2,"column":8,"nodeType":"157","messageId":"171","endLine":2,"endColumn":17},{"ruleId":"169","severity":1,"message":"172","line":3,"column":8,"nodeType":"157","messageId":"171","endLine":3,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":123,"column":49,"nodeType":"165","messageId":"166","endLine":125,"endColumn":26},{"ruleId":"151","severity":1,"message":"159","line":165,"column":30,"nodeType":"153","messageId":"154","endLine":165,"endColumn":32},{"ruleId":"151","severity":1,"message":"159","line":170,"column":35,"nodeType":"153","messageId":"154","endLine":170,"endColumn":37},{"ruleId":"151","severity":1,"message":"159","line":175,"column":35,"nodeType":"153","messageId":"154","endLine":175,"endColumn":37},{"ruleId":"151","severity":1,"message":"159","line":180,"column":35,"nodeType":"153","messageId":"154","endLine":180,"endColumn":37},{"ruleId":"151","severity":1,"message":"152","line":27,"column":38,"nodeType":"153","messageId":"154","endLine":27,"endColumn":40},{"ruleId":"155","severity":1,"message":"156","line":53,"column":21,"nodeType":"157","messageId":"158","endLine":53,"endColumn":30},{"ruleId":"151","severity":1,"message":"152","line":54,"column":38,"nodeType":"153","messageId":"154","endLine":54,"endColumn":40},{"ruleId":"151","severity":1,"message":"152","line":54,"column":58,"nodeType":"153","messageId":"154","endLine":54,"endColumn":60},{"ruleId":"151","severity":1,"message":"159","line":242,"column":28,"nodeType":"153","messageId":"154","endLine":242,"endColumn":30},{"ruleId":"151","severity":1,"message":"159","line":242,"column":39,"nodeType":"153","messageId":"154","endLine":242,"endColumn":41},{"ruleId":"151","severity":1,"message":"152","line":247,"column":28,"nodeType":"153","messageId":"154","endLine":247,"endColumn":30},{"ruleId":"151","severity":1,"message":"159","line":247,"column":39,"nodeType":"153","messageId":"154","endLine":247,"endColumn":41},{"ruleId":"151","severity":1,"message":"159","line":252,"column":28,"nodeType":"153","messageId":"154","endLine":252,"endColumn":30},{"ruleId":"151","severity":1,"message":"152","line":252,"column":39,"nodeType":"153","messageId":"154","endLine":252,"endColumn":41},{"ruleId":"160","severity":1,"message":"161","line":258,"column":33,"nodeType":"153","messageId":"162","endLine":258,"endColumn":34},{"ruleId":"169","severity":1,"message":"173","line":193,"column":21,"nodeType":"157","messageId":"171","endLine":193,"endColumn":23},{"ruleId":"169","severity":1,"message":"174","line":209,"column":21,"nodeType":"157","messageId":"171","endLine":209,"endColumn":23},{"ruleId":"147","replacedBy":"175"},{"ruleId":"149","replacedBy":"176"},{"ruleId":"169","severity":1,"message":"170","line":2,"column":8,"nodeType":"157","messageId":"171","endLine":2,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":123,"column":49,"nodeType":"165","messageId":"166","endLine":125,"endColumn":26},{"ruleId":"151","severity":1,"message":"159","line":165,"column":30,"nodeType":"153","messageId":"154","endLine":165,"endColumn":32},{"ruleId":"151","severity":1,"message":"159","line":170,"column":35,"nodeType":"153","messageId":"154","endLine":170,"endColumn":37},{"ruleId":"151","severity":1,"message":"159","line":175,"column":35,"nodeType":"153","messageId":"154","endLine":175,"endColumn":37},{"ruleId":"151","severity":1,"message":"159","line":180,"column":35,"nodeType":"153","messageId":"154","endLine":180,"endColumn":37},{"ruleId":"169","severity":1,"message":"177","line":3,"column":22,"nodeType":"157","messageId":"171","endLine":3,"endColumn":41},{"ruleId":"169","severity":1,"message":"178","line":68,"column":21,"nodeType":"157","messageId":"171","endLine":68,"endColumn":23},{"ruleId":"169","severity":1,"message":"179","line":69,"column":21,"nodeType":"157","messageId":"171","endLine":69,"endColumn":23},{"ruleId":"169","severity":1,"message":"180","line":81,"column":17,"nodeType":"157","messageId":"171","endLine":81,"endColumn":29},{"ruleId":"169","severity":1,"message":"181","line":97,"column":17,"nodeType":"157","messageId":"171","endLine":97,"endColumn":29},{"ruleId":"169","severity":1,"message":"173","line":159,"column":17,"nodeType":"157","messageId":"171","endLine":159,"endColumn":19},{"ruleId":"169","severity":1,"message":"174","line":176,"column":17,"nodeType":"157","messageId":"171","endLine":176,"endColumn":19},{"ruleId":"169","severity":1,"message":"182","line":193,"column":17,"nodeType":"157","messageId":"171","endLine":193,"endColumn":19},{"ruleId":"169","severity":1,"message":"183","line":210,"column":17,"nodeType":"157","messageId":"171","endLine":210,"endColumn":19},{"ruleId":"155","severity":1,"message":"184","line":77,"column":17,"nodeType":"157","messageId":"158","endLine":77,"endColumn":23},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'filtered2' is already defined.","Identifier","redeclared","Expected '===' and instead saw '=='.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'name'.","ArrowFunctionExpression","unsafeRefs",["185"],["186"],"no-unused-vars","'BarChart4' is defined but never used.","unusedVar","'BarChart3' is defined but never used.","'l1' is assigned a value but never used.","'l2' is assigned a value but never used.",["185"],["186"],"'getData_for_country' is defined but never used.","'kn' is assigned a value but never used.","'wn' is assigned a value but never used.","'scatterPlot3' is assigned a value but never used.","'scatterPlot4' is assigned a value but never used.","'l3' is assigned a value but never used.","'l4' is assigned a value but never used.","'result' is already defined.","no-global-assign","no-unsafe-negation"]