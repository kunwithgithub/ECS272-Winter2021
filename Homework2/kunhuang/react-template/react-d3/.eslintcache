[{"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/index.js":"1","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/reportWebVitals.js":"2","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/App.js":"3","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/My_Navbar.js":"4","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/Sk_BarChart.js":"5","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/data_processing.js":"6","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/Sk_PieChart.js":"7","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/Sk_VoronoiDiagram.js":"8"},{"size":1612,"mtime":1611537199564,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610612293135,"results":"11","hashOfConfig":"10"},{"size":1134,"mtime":1611538129388,"results":"12","hashOfConfig":"10"},{"size":922,"mtime":1611047410608,"results":"13","hashOfConfig":"10"},{"size":7282,"mtime":1611538451075,"results":"14","hashOfConfig":"10"},{"size":846,"mtime":1611349337312,"results":"15","hashOfConfig":"10"},{"size":4958,"mtime":1611387467863,"results":"16","hashOfConfig":"10"},{"size":4554,"mtime":1611538017489,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"nwgv27",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/index.js",["36","37","38"],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/reportWebVitals.js",[],["39","40"],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/App.js",["41","42","43"],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/My_Navbar.js",[],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/Sk_BarChart.js",["44","45","46","47","48"],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/data_processing.js",[],"/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/Sk_PieChart.js",["49","50"],"import React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport { data_processing,data_cleaning } from './data_processing';\n\nclass Sk_BarChart extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value: 5\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event){\n        this.setState({\n            value: event.target.value\n        });\n    }\n\n    componentDidMount(){\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.drawChart();\n    }\n\n    data_pipeline(num, dataset){\n  \n        let data = data_processing(data_cleaning(dataset,[\"Director\"]),[\"Director\"]);\n        let top_5_directors = [];\n        let director_stat = {}\n        data.map(data=>{\n          if(director_stat.hasOwnProperty(data[\"Director\"])){\n            director_stat[data[\"Director\"]]+=1;\n          }else{\n            director_stat[data[\"Director\"]]=0;\n          }\n        });\n        for(let i = 0; i<num; i++){\n          let max_count = -1;\n          let max_director = \"\";\n          for(let prop in director_stat){\n            if(director_stat[prop]>max_count){\n              max_director = prop;\n              max_count = director_stat[prop];\n            }\n          }\n          top_5_directors.push({\n          name:max_director,\n          number:max_count\n          });\n          delete director_stat[max_director];\n        }\n        return top_5_directors;\n    \n      }\n\n\n    drawChart(){\n            // log csv in browser console\n        d3.csv(this.props.data)\n        .then((dataset)=>{\n\n            let top_directors = this.data_pipeline(this.state.value,dataset);\n        \n\n            if(!top_directors){\n                return;\n            }\n\n            let pie_data = d3.pie().sort(null).value(data=>data.number)(top_directors);\n  \n            let colors = d3.scaleSequential().domain([0,d3.max(top_directors,data=>data.number)]).interpolator(d3.interpolateBlues);\n            var width = this.props.width;\n            var height = this.props.height;\n            d3.select('#container_pie').selectAll(\"*\").remove();\n            let svg = d3.select('#container_pie')\n                          .append('svg')\n                          .attr(\"width\",width)\n                          .attr(\"height\",height)\n                          .style(\"background\",\"grey\");\n            let segments = d3.arc()\n                             .innerRadius(0)\n                             .outerRadius(150)\n                             .padAngle(0.05)\n                             .padRadius(50);\n            let g = svg.append(\"g\")\n                      .attr(\"transform\",\"translate(200,200)\")\n                      .selectAll(\"path\")\n                      .data(pie_data)\n                      .join(\"path\")\n                      .attr(\"d\",segments)\n                      .attr(\"fill\",data=>colors(data.data.number));\n                      \n            let caption = svg.select(\"g\")\n                           .selectAll(\"text\")\n                           .data(pie_data);\n            //console.log(svg.select(\"g\").selectAll(\"text\"));\n            caption.join(\"text\").each(function(data){\n            let center = segments.centroid(data);\n            //console.log(this);\n            d3.select(this).attr(\"x\",center[0]-80)\n                           .attr(\"y\",center[1])\n                           .text(data.data.name+\":\"+data.data.number)\n                           .attr(\"font-family\",\"Saira\")\n                           .attr(\"font-weight\",\"bold\")\n                           .attr(\"fill\",\"white\");\n            });\n            let legends = svg.append(\"g\")\n                             .attr(\"transform\",\"translate(400,100)\")\n                             .selectAll(\".category\").data(pie_data);\n            let legend = legends.join(\"g\")\n                                .classed(\"category\",true)\n                                .attr(\"transform\",(data,index)=>{\n                                  return \"translate(0,\"+(index+1)*30+\")\";\n                                });\n            legend.append(\"rect\")\n                  .attr(\"width\",20)\n                  .attr(\"height\",20)\n                  .attr(\"fill\",data=>colors(data.data.number));\n            legend.append(\"text\").text(data=>data.data.name)\n                                 .attr(\"font-weight\",\"bold\")\n                                 .attr(\"font-family\", \"Saira\")\n                                 .attr(\"fill\",data=>colors(data.data.number))\n                                 .attr(\"x\",20)\n                                 .attr(\"y\",20);\n\n        });\n\n    \n    }\n\n    render(){\n        return (\n        <div id={\"#\" + this.props.id}>\n            <form>\n                <label>\n                Top X directors:\n                <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                </label>\n            </form>\n        </div>);\n    }\n}\n\nexport default Sk_BarChart;","/home/shikun/Desktop/ECS 272/ECS272-Winter2021/Homework2/kunhuang/react-template/react-d3/src/Sk_VoronoiDiagram.js",["51"],{"ruleId":"52","severity":1,"message":"53","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":12},{"ruleId":"52","severity":1,"message":"56","line":8,"column":8,"nodeType":"54","messageId":"55","endLine":8,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":23,"column":7,"nodeType":"59","endLine":23,"endColumn":19},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"57","severity":1,"message":"64","line":23,"column":11,"nodeType":"59","endLine":23,"endColumn":74},{"ruleId":"57","severity":1,"message":"65","line":31,"column":11,"nodeType":"59","endLine":31,"endColumn":74},{"ruleId":"57","severity":1,"message":"66","line":39,"column":11,"nodeType":"59","endLine":39,"endColumn":80},{"ruleId":"67","severity":1,"message":"68","line":44,"column":22,"nodeType":"69","messageId":"70","endLine":44,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":46,"column":37,"nodeType":"73","messageId":"74","endLine":46,"endColumn":39},{"ruleId":"67","severity":1,"message":"75","line":47,"column":19,"nodeType":"76","messageId":"77","endLine":47,"endColumn":26},{"ruleId":"52","severity":1,"message":"78","line":127,"column":17,"nodeType":"54","messageId":"55","endLine":127,"endColumn":21},{"ruleId":"52","severity":1,"message":"79","line":137,"column":17,"nodeType":"54","messageId":"55","endLine":137,"endColumn":25},{"ruleId":"67","severity":1,"message":"75","line":34,"column":22,"nodeType":"69","messageId":"80","endLine":34,"endColumn":24},{"ruleId":"52","severity":1,"message":"81","line":89,"column":17,"nodeType":"54","messageId":"55","endLine":89,"endColumn":18},{"ruleId":"67","severity":1,"message":"75","line":33,"column":22,"nodeType":"69","messageId":"80","endLine":33,"endColumn":24},"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","'Sk_BarChart' is defined but never used.","react/jsx-pascal-case","Imported JSX component My_Navbar must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"Imported JSX component Sk_BarChart must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Sk_PieChart must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Sk_VoronoiDiagram must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'bars' is assigned a value but never used.","'captions' is assigned a value but never used.","expectedInside","'g' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]